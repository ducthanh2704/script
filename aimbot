local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local camera = workspace.CurrentCamera
local localPlayer = Players.LocalPlayer
local playerGui = localPlayer:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui", playerGui)
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 200, 0, 120)
frame.Position = UDim2.new(0, 10, 0, 80)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.Active = true
frame.Draggable = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)

local toggleButton = Instance.new("TextButton", frame)
toggleButton.Size = UDim2.new(0, 180, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 13
toggleButton.Text = "Aimbot: OFF (T)"
toggleButton.AutoButtonColor = false
Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 8)

local teamButton = Instance.new("TextButton", frame)
teamButton.Size = UDim2.new(0, 180, 0, 40)
teamButton.Position = UDim2.new(0, 10, 0, 70)
teamButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
teamButton.TextColor3 = Color3.new(1, 1, 1)
teamButton.Font = Enum.Font.SourceSansBold
teamButton.TextSize = 13
teamButton.Text = "TeamCheck: OFF (H)"
teamButton.AutoButtonColor = false
Instance.new("UICorner", teamButton).CornerRadius = UDim.new(0, 8)

local aimbotEnabled = false
local teamCheck = false
local currentTarget = nil
local FOV = 150

local circle = Drawing.new("Circle")
circle.Radius = FOV
circle.Thickness = 2
circle.Color = Color3.new(0, 1, 0)
circle.Transparency = 0.5
circle.Filled = false
circle.Visible = false

local function getTargetPart(character)
    return character:FindFirstChild("Head") or character:FindFirstChild("UpperTorso") or character:FindFirstChild("HumanoidRootPart")
end

local function isVisible(part)
    local origin = camera.CFrame.Position
    local rayParams = RaycastParams.new()
    rayParams.FilterType = Enum.RaycastFilterType.Blacklist
    rayParams.FilterDescendantsInstances = {localPlayer.Character, camera}
    rayParams.IgnoreWater = true
    local dir = (part.Position - origin)
    local ray = workspace:Raycast(origin, dir, rayParams)
    return not ray or ray.Instance:IsDescendantOf(part.Parent)
end

local function getTarget()
    local closest = nil
    local minDist = math.huge
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            if not teamCheck or player.Team ~= localPlayer.Team then
                local part = getTargetPart(player.Character)
                if part and isVisible(part) then
                    local screenPos, onScreen = camera:WorldToViewportPoint(part.Position)
                    if onScreen then
                        local dist = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)).Magnitude
                        if dist < minDist and dist <= FOV then
                            minDist = dist
                            closest = player
                        end
                    end
                end
            end
        end
    end
    return closest
end

local function setAimbot(state)
    aimbotEnabled = state
    toggleButton.Text = state and "Aimbot: ON (T)" or "Aimbot: OFF (T)"
    local goalColor = state and Color3.fromRGB(60, 130, 60) or Color3.fromRGB(30, 30, 30)
    TweenService:Create(toggleButton, TweenInfo.new(0.15), {BackgroundColor3 = goalColor}):Play()
    circle.Visible = state
    if not state then currentTarget = nil end
end

local function setTeamCheck(state)
    teamCheck = state
    teamButton.Text = state and "TeamCheck: ON (H)" or "TeamCheck: OFF (H)"
    local goalColor = state and Color3.fromRGB(60, 130, 60) or Color3.fromRGB(30, 30, 30)
    TweenService:Create(teamButton, TweenInfo.new(0.15), {BackgroundColor3 = goalColor}):Play()
end

toggleButton.MouseButton1Click:Connect(function()
    setAimbot(not aimbotEnabled)
end)

teamButton.MouseButton1Click:Connect(function()
    setTeamCheck(not teamCheck)
end)

UserInputService.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.T then
        setAimbot(not aimbotEnabled)
    elseif input.KeyCode == Enum.KeyCode.H then
        setTeamCheck(not teamCheck)
    end
end)

RunService.RenderStepped:Connect(function()
    circle.Position = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)
    if aimbotEnabled then
        if currentTarget then
            local char = currentTarget.Character
            if char and char:FindFirstChild("Humanoid") and char.Humanoid.Health > 0 then
                local part = getTargetPart(char)
                if part then
                    camera.CFrame = CFrame.new(camera.CFrame.Position, part.Position)
                end
            else
                currentTarget = nil
            end
        else
            currentTarget = getTarget()
        end
    end
end)
