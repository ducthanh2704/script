local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local camera = workspace.CurrentCamera
local localPlayer = Players.LocalPlayer
local playerGui = localPlayer:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui", playerGui)
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 200, 0, 70)
frame.Position = UDim2.new(0, 10, 0, 80)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.Active = true
frame.Draggable = true
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)

local toggleButton = Instance.new("TextButton", frame)
toggleButton.Size = UDim2.new(0, 180, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 0, 15)
toggleButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 13
toggleButton.Text = "Aimlock: OFF (T)"
toggleButton.AutoButtonColor = false
Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 8)

local aimbotEnabled = false
local currentTarget = nil
local FOV = 150

local circle = Drawing.new("Circle")
circle.Visible = true
circle.Color = Color3.fromRGB(255, 255, 255)
circle.Thickness = 1.5
circle.NumSides = 64
circle.Radius = FOV
circle.Filled = false
circle.Transparency = 0.8

local function getTargetPart(character)
	return character:FindFirstChild("Head")
	    or character:FindFirstChild("UpperTorso")
	    or character:FindFirstChild("HumanoidRootPart")
end

local function getTarget()
	local closest = nil
	local minDist = math.huge
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= localPlayer and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
			local part = getTargetPart(player.Character)
			if part then
				local screenPos, onScreen = camera:WorldToViewportPoint(part.Position)
				if onScreen then
					local dist = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)).Magnitude
					if dist < minDist and dist <= FOV then
						minDist = dist
						closest = player
					end
				end
			end
		end
	end
	return closest
end

local function setAimbot(state)
	aimbotEnabled = state
	toggleButton.Text = state and "Aimlock: ON (T)" or "Aimlock: OFF (T)"
	local goalColor = state and Color3.fromRGB(60, 130, 60) or Color3.fromRGB(30, 30, 30)
	TweenService:Create(toggleButton, TweenInfo.new(0.15), {BackgroundColor3 = goalColor}):Play()
	if not state then 
		currentTarget = nil 
	end
end

toggleButton.MouseButton1Click:Connect(function()
	setAimbot(not aimbotEnabled)
end)

UserInputService.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.T then
		setAimbot(not aimbotEnabled)
	end
end)

RunService.RenderStepped:Connect(function()
	circle.Position = Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)
	circle.Radius = FOV

	if aimbotEnabled then
		if not currentTarget then
			currentTarget = getTarget()
		end

		if currentTarget then
			local char = currentTarget.Character
			if char and char:FindFirstChild("Humanoid") and char.Humanoid.Health > 0 then
				local part = getTargetPart(char)
				if part then
					local hrp = char:FindFirstChild("HumanoidRootPart")
					local velocity = hrp and hrp.Velocity or Vector3.zero
					local pingAdjustment = 0.165
					local predictedPos = part.Position + (velocity * pingAdjustment)
					camera.CFrame = CFrame.new(camera.CFrame.Position, predictedPos)
				end
			else

				currentTarget = nil
			end
		end
	end
end)
